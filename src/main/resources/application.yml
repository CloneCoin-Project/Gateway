server:
  port: 8000

eureka:
  instance:
    preferIpAddress: true
    ip-address: 3.35.197.230
  client:
    register-with-eureka: true # false 로 해도됨.
    fetch-registry: true
    service-url:
      defaultZone: http://13.125.221.207:8761/eureka/ # 도커때는 http://discovery-service:8761/eureka/

spring:
  application:
    name: gateway
  cloud:
    client:
      hostname: gateway
    gateway:
      routes:
#         - id: user
#          uri: lb://USER
#          predicates:
#            - Path=/user/login, /user/users, /user/welcome
#            - Method=GET,POST
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user/(?<segment>.*), /$\{segment}
#            - AuthorizationHeaderFilter # 로그인,회원 가입 제외하고는 authorizationHeaderFilter 적용!(token 써야한다)
#        # 1. 회원가입, 로그인 토큰 필요 없음
        - id: user
          uri: lb://USER
          predicates:
            - Path=/user/login, /user/users
            - Method=POST
          filters :
            - RewritePath=/user/login, /login
        # 2. get method (유저정보, 팔로잉 관계 등) 토큰 필요 없음
        - id: user
          uri: lb://USER
          predicates:
            - Path=/user/**
#            - Method=GET
#        # 3. 그 외에는 토큰 필요 (/user/follow, /user/unfollow, /user/leader)
#        - id: user
#          uri: lb://USER
#          predicates:
#            - Path=/user/**,
#          filters:
#            - AuthorizationHeaderFilter

        - id: portfolio
          uri: lb://PORTFOLIO
          predicates:
            - Path=/portfolio/**

        - id: analysis
          uri: lb://ANALYSIS
          predicates:
            - Path=/analysis/**

        - id: walletwrite
          uri: lb://WALLETWRITE
          predicates:
            - Path=/walletwrite/**

        - id: walletread
          uri: lb://WALLETREAD
          predicates:
            - Path=/walletread/**

        - id: push-server
          uri: lb://PUSHSERVER
          predicates:
            - Path=/push/**

token:
  secret: user_token